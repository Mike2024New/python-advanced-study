"""
функции all и any -> отвечают за проверку элементов коллекции, any проверяет, что-бы хотябы один элемент из коллекции
соответствовал условию, а функция all проверяет, чтобы все элементы коллекции соответствовали заданному условию. Обе
функции возвращают True/False. Эти функции стоит использовать именно с генераторами, так как нет смысла в данном случае
использовать списковое включение.
"""


def example1():
    """
    функция any проверяет есть ли хотябы один элемент удовлетворяющий заданному условию, целесообразно
    использовать эту функцию совместно с генератором (ленивой функцией), чтобы сэкономить память и кол-во итераций,
    так как этой функции достаточно найти первый элемент удовлетворяющий условию и выдать true
    """
    x = [10, 4, 3, 2, 15]  # тестовая коллекция
    res = any(i % 3 == 0 for i in x)  # использ генератор для проверки
    print(res)  # output: True


def example2():
    """
    all в отличии от any отвечает за то, чтобы проверить, что все элементы коллекции соответствуют заданному условию.
    Для функции также стоит использовать генераторы для экономии ресурсов памяти
    """
    x = [3, 6, 9]
    res = all(i % 3 == 0 for i in x)  # под капотом x превращается в список [True, True, True]
    print(res)


if __name__ == '__main__':
    example2()
